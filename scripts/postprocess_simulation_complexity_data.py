"""Script for post-processing the dataset generated by 'collect_simulation_complexity_data.py."""

import argparse
import os
import yaml

import numpy as np
from matplotlib import pyplot as plt


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--data_path",
        required=True,
        type=str,
        help="The top level path for the data generated by 'collect_random_force_data.py'.",
    )
    args = parser.parse_args()

    gmm_nums = []
    mean_times = []
    for perturbation_entry in os.scandir(args.data_path):
        if not perturbation_entry.is_dir():
            continue

        times = []
        for run_entry in os.scandir(perturbation_entry.path):
            if not run_entry.is_dir():
                continue

            meta_data_path = os.path.join(run_entry.path, "meta_data.yaml")
            meta_data = yaml.safe_load(open(meta_data_path, "r"))
            times.append(meta_data["time_taken_to_simulate_inner_s"])
            gmm_num = meta_data["mesh_processing_GMM_EM"]["n_components"]

        gmm_nums.append(gmm_num)
        mean_times.append(np.mean(times))

    plt.plot(gmm_nums, mean_times, linestyle="", marker="o")
    plt.title("GMM EM with Random Force Experiment")
    plt.xlabel("Number of ellipsoids")
    plt.ylabel("Mean simulation time of 10 runs (s)")
    plt.savefig(os.path.join(args.data_path, "simulation_time_per_ellipsoid_num.png"))
    plt.close()


if __name__ == "__main__":
    main()
